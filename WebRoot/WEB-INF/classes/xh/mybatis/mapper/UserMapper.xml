<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xh.mybatis.mapper.UserMapper">

  <!-- redis缓存 -->
    <cache eviction="LRU" flushInterval="600000" size="1024" readOnly="true"  type="xh.mybatis.tools.LoggingRedisCache"/>
<!-- 自定义返回结果集 -->
   <resultMap id="userMap" type="xh.mybatis.bean.UserBean">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="name" column="name" javaType="java.lang.String"></result>
        <result property="age" column="age" javaType="java.lang.Integer"></result>
    </resultMap>
<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->    
<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
            方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->    
<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->
 

   
    <!--查询所有-->
    <select id="selectAllUser" resultMap="userMap" useCache="true">
     select * from student
    </select>
    <!--增加用户-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
     insert into student(name,age) values(#{name},#{age})
    </insert>
    
    <!--更新用户-->
    <update id="updateUser" >
      update student set name=#{username},age=#{password} where id=#{id}
    </update>
    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
     delete student where id=#{id}  
    </delete>
    <!--查询某个用户-->
    <select id="selectUserById" parameterType="int" resultMap="userMap">
     select * student where id=#{id}
    </select>
    
    
</mapper>